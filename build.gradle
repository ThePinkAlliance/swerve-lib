plugins {
    id 'java-library'
    id 'maven-publish'
    id "edu.wpi.first.GradleRIO" version "2023.1.1"
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

def SWERVE_LIB_MAIN_CLASS = "com.ThePinkAlliance.swervelib"

allprojects {
    group 'com.ThePinkAlliance'
    version '1.1.8'

    repositories {
        mavenCentral()

        maven { url = uri('https://frcmaven.wpi.edu/artifactory/release/') }

        // CTRE
        maven { url = uri('https://devsite.ctr-electronics.com/maven/release/') }

        // REV
        maven { url = uri('https://maven.revrobotics.com/') }

        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation 'edu.wpi.first.wpilibj:wpilibj-java:2023.1.1'

    // CTRE is implementation because it is not a hard requirement
    implementation 'com.ctre.phoenix:api-java:5.30.2'
    implementation 'com.ctre.phoenix:wpiapi-java:5.30.2'

    // Pink Alliance core library develop version, NOTE: Remove this before a production release.
    // implementation("com.github.ThePinkAlliance:core:d4be80f3ff")

    // REV is implementation because it is not a hard requirement
    implementation 'com.revrobotics.frc:REVLib-java:2023.1.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

jar {
  def env = System.getenv("JITPACK")

  if (env == false || env == null) {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(SWERVE_LIB_MAIN_CLASS)
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
  }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

test {
    useJUnitPlatform()
}
